<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.song.jeremy.mapper.ItemsCommentsMapper">
  <resultMap id="BaseResultMap" type="com.song.jeremy.dbmodel.ItemsComments">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="item_id" jdbcType="VARCHAR" property="itemId" />
    <result column="item_name" jdbcType="VARCHAR" property="itemName" />
    <result column="item_spec_id" jdbcType="VARCHAR" property="itemSpecId" />
    <result column="sepc_name" jdbcType="VARCHAR" property="sepcName" />
    <result column="comment_level" jdbcType="INTEGER" property="commentLevel" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, item_id, item_name, item_spec_id, sepc_name, comment_level, content, 
    create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from items_comments
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from items_comments
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.song.jeremy.dbmodel.ItemsComments">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String">
      useGeneratedKeys
    </selectKey>
    insert into items_comments (id, user_id, item_id, 
      item_name, item_spec_id, sepc_name, 
      comment_level, content, create_time, 
      update_time)
    values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{itemId,jdbcType=VARCHAR}, 
      #{itemName,jdbcType=VARCHAR}, #{itemSpecId,jdbcType=VARCHAR}, #{sepcName,jdbcType=VARCHAR}, 
      #{commentLevel,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.song.jeremy.dbmodel.ItemsComments">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String">
      useGeneratedKeys
    </selectKey>
    insert into items_comments
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      <if test="userId != null">
        user_id,
      </if>
      <if test="itemId != null">
        item_id,
      </if>
      <if test="itemName != null">
        item_name,
      </if>
      <if test="itemSpecId != null">
        item_spec_id,
      </if>
      <if test="sepcName != null">
        sepc_name,
      </if>
      <if test="commentLevel != null">
        comment_level,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=VARCHAR},
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="itemId != null">
        #{itemId,jdbcType=VARCHAR},
      </if>
      <if test="itemName != null">
        #{itemName,jdbcType=VARCHAR},
      </if>
      <if test="itemSpecId != null">
        #{itemSpecId,jdbcType=VARCHAR},
      </if>
      <if test="sepcName != null">
        #{sepcName,jdbcType=VARCHAR},
      </if>
      <if test="commentLevel != null">
        #{commentLevel,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.song.jeremy.dbmodel.ItemsComments">
    update items_comments
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="itemId != null">
        item_id = #{itemId,jdbcType=VARCHAR},
      </if>
      <if test="itemName != null">
        item_name = #{itemName,jdbcType=VARCHAR},
      </if>
      <if test="itemSpecId != null">
        item_spec_id = #{itemSpecId,jdbcType=VARCHAR},
      </if>
      <if test="sepcName != null">
        sepc_name = #{sepcName,jdbcType=VARCHAR},
      </if>
      <if test="commentLevel != null">
        comment_level = #{commentLevel,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.song.jeremy.dbmodel.ItemsComments">
    update items_comments
    set user_id = #{userId,jdbcType=VARCHAR},
      item_id = #{itemId,jdbcType=VARCHAR},
      item_name = #{itemName,jdbcType=VARCHAR},
      item_spec_id = #{itemSpecId,jdbcType=VARCHAR},
      sepc_name = #{sepcName,jdbcType=VARCHAR},
      comment_level = #{commentLevel,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>